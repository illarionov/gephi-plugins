/*
 Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian <mathieu.bastian@gephi.org>
 Website : http://www.gephi.org

 This file is part of Gephi.

 Gephi is free software: you can redistribute it and/or modify
 it under the terms of the GNU Affero General Public License as
 published by the Free Software Foundation, either version 3 of the
 License, or (at your option) any later version.

 Gephi is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Affero General Public License for more details.

 You should have received a copy of the GNU Affero General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.gephi.plugins.positionranking;

import javax.swing.JPanel;
import org.gephi.appearance.api.RankingFunction;
import org.openide.util.NbPreferences;

/**
 * @author Alexis Jacomy, Mathieu Bastian
 */
public class PositionTransformerPanel extends JPanel {

    public PositionTransformerPanel() {
        initComponents();
    }

    public void setup(RankingFunction function) {
        final String MIN_VALUE = "PositionTransformerPanel_min";
        final String MAX_VALUE = "PositionTransformerPanel__max";
        final String AXIS = "PositionTransformerPanel_axis";

        final PositionTransformer transformer = function.getTransformer();

        float minValueStart = NbPreferences.forModule(PositionTransformerPanel.class)
            .getFloat(MIN_VALUE, transformer.getMin());
        float maxValueStart = NbPreferences.forModule(PositionTransformerPanel.class)
            .getFloat(MAX_VALUE, transformer.getMax());
        String axisStart = NbPreferences.forModule(PositionTransformerPanel.class)
            .get(AXIS, transformer.getAxe());

        transformer.setMin(minValueStart);
        transformer.setMax(maxValueStart);

        axeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"X", "Y", "Z"}));
        axeComboBox.setSelectedItem(axisStart);
        axeComboBox.addActionListener(evt -> {
            transformer.setAxe(axeComboBox.getModel().getSelectedItem().toString());
            NbPreferences.forModule(PositionTransformerPanel.class)
                .put(AXIS, axeComboBox.getModel().getSelectedItem().toString());
        });

        minValue.setValue(minValueStart);
        minValue.addChangeListener(e -> {
            transformer.setMin((Float) minValue.getValue());
            NbPreferences.forModule(PositionTransformerPanel.class).putFloat(MIN_VALUE, (Float) minValue.getValue());
        });

        maxValue.setValue(maxValueStart);
        maxValue.addChangeListener(e -> {
            transformer.setMax((Float) maxValue.getValue());
            NbPreferences.forModule(PositionTransformerPanel.class).putFloat(MAX_VALUE, (Float) maxValue.getValue());
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelMinValue = new javax.swing.JLabel();
        minValue = new javax.swing.JSpinner();
        labelMaxValue = new javax.swing.JLabel();
        maxValue = new javax.swing.JSpinner();
        axeComboBox = new javax.swing.JComboBox();
        labelAxis = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(225, 114));

        labelMinValue.setText(org.openide.util.NbBundle.getMessage(PositionTransformerPanel.class,
            "PositionTransformerPanel.labelMinValue.text")); // NOI18N

        minValue.setModel(new javax.swing.SpinnerNumberModel(1.0f, 0.1f, null, 0.5f));

        labelMaxValue.setText(org.openide.util.NbBundle.getMessage(PositionTransformerPanel.class,
            "PositionTransformerPanel.labelMaxValue.text")); // NOI18N

        maxValue.setModel(new javax.swing.SpinnerNumberModel(4.0f, 0.5f, null, 0.5f));

        axeComboBox.setModel(
            new javax.swing.DefaultComboBoxModel(new String[] {"Item 1", "Item 2", "Item 3", "Item 4"}));

        labelAxis.setText(org.openide.util.NbBundle.getMessage(PositionTransformerPanel.class,
            "PositionTransformerPanel.labelAxis.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labelMinValue)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(minValue, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelMaxValue)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(maxValue, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labelAxis)
                            .addGap(18, 18, 18)
                            .addComponent(axeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelMinValue)
                        .addComponent(minValue, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(maxValue, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelMaxValue))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelAxis)
                        .addComponent(axeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox axeComboBox;
    private javax.swing.JLabel labelAxis;
    private javax.swing.JLabel labelMaxValue;
    private javax.swing.JLabel labelMinValue;
    private javax.swing.JSpinner maxValue;
    private javax.swing.JSpinner minValue;
    // End of variables declaration//GEN-END:variables
}
